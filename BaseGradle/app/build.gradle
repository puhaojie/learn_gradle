apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled rootProject.ext.android.multiDexEnabled //突破应用方法数65535的一个限制
        manifestPlaceholders = rootProject.ext.android.manifestPlaceholders
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

allprojects{

}

// 为应用程序添加依赖
dependencies { DependencyHandler dependencyHandler  ->
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support' // 排除依赖
        exclude module: 'support-annotations'
    })
    compile(rootProject.ext.dependence.libOkhttp) {
//        exclude module: 'support-v4' //排除依赖
        transitive false //禁止传递依赖
    }
    dependencyHandler.compile rootProject.ext.dependence.libSupportV7
    dependencyHandler.compile rootProject.ext.dependence.libSupportMultidex
    dependencyHandler.testCompile 'junit:junit:4.12'
    dependencyHandler.compile project(':Test')

    // 编译的时候会加载，运行的时候是没有的（主工程和库工程同时引用，可以在库工程中使用）
//    provided(rootProject.ext.dependence.libAndfix)
}

/**
 *  文件拷贝
 */
// copy {
//     from files('proguard-rules.pro','app.iml')
//     into('../gradle')
//     exclude('*.pro')
// }

//copy {
//    from file('build/outputs/apk/')
//    into getRootProject().getBuildDir().path+'/apk/'
//}

/**
 *  对文件树进行遍历
 */
fileTree('build/') { FileTree fileTree ->
    fileTree.visit { FileTreeElement element->
        println element.file.name
    }
}



